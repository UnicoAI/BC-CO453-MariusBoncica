@model ConsoleAppProject.App03.StudentGrades

@{
    ViewData["Title"] = "MB WebApps | Analyse Grades";
}

<header class="text-center jumbotron justify-content-center">
    <h1 class="display-4">Student Marks</h1>
    <h2>Analyse Grades</h2>
    <p>This App will allow you to enter marks for individual students, convert these marks to a grade, and show information such as statistics and charts.</p>
</header>
<section>
    <h2>Statistics</h2>
    <table class="table table-bordered table-hover">
        <thead>
            <tr class="text-center table-success">
                <th>Student Count</th>
                <th>Minimum Mark</th>
                <th>Maximum Mark</th>
                <th>Mean Mark</th>
            </tr>
        </thead>
        <tbody>
            <tr class="text-center">
                <td>@Model.Students.Length</td>
                <td>@Model.Minimum</td>
                <td>@Model.Maximum</td>
                <td>@Model.Mean.ToString("0.0")</td>
            </tr>
        </tbody>
    </table>
</section>
<section>
    <h2>Grade Profiles</h2>
    <table class="table table-bordered table-hover">
        <thead>
            <tr class="text-center table-info">
                <th>Fail</th>
                <th>Grade D</th>
                <th>Grade C</th>
                <th>Grade B</th>
                <th>Grade A</th>
            </tr>
        </thead>
        <tbody>
            <tr class="text-center">
                @foreach (int count in Model.GradeProfile)
                {
                    double percent = (double)count / Model.Marks.Length;
                    <td>@percent.ToString("0.0%")</td>
                }
            </tr>
        </tbody>
    </table>
</section>
<section>
    <h2>Charts</h2>
</section>
<html>
  <head>
    @{
        int firstClass = 0;
        int upperSecondClass = 0;
        int lowerSecondClass = 0;
        int thirdClass = 0;
        int fail = 0;

        foreach(int mark in Model.Marks)
        {
            if (mark >= 70)
                firstClass +=1;
            else if (mark >= 60)
                upperSecondClass++;
            else if (mark >= 50)
                lowerSecondClass++;
            else if (mark >= 40)
                thirdClass++;
            else
                fail++;
        }
    }
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        var data = google.visualization.arrayToDataTable([
          ['Classifaction', 'Student Count'],
          ['First Class (A)', @firstClass],
          ['Upper Second Class (B)', @upperSecondClass],
          ['Lower Second Class (C)', @lowerSecondClass],
          ['Third Class (D)', @thirdClass],
          ['Fail (F)', @fail]
        ]);

        var options = {
          title: 'Student Grade Classifications Data based on @Model.Students.Count() Students.'
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart'));

        chart.draw(data, options);
      }
    </script>

  </head>
  <body>
    <div id="piechart" style="width: 900px; height: 500px;"></div>
  </body>
</html>

